{"name":"Mean-sso","tagline":"An SSO and CMS using Yeoman generator-angular-fullstack (MEAN Stack)","body":"### MEAN SSO\r\n\r\nPrimitive Node.js SSO based on the generator-angular-fullstack version of the MEAN Stack and OAuth2orize middleware.\r\n\r\n* [View Demo](http://intense-brushlands-5559.herokuapp.com/) \r\n* [View Source](https://github.com/sullivanpt/mean-sso)\r\n\r\n***\r\n\r\nCentralize User Authentication across servers in your organization using open standard protocols. Clients can authenticate against the SSO using:\r\n* CAS 1.0 an 2.0 (no proxies)\r\n* OAuth2 Server JASIG CAS 3.5.2 idioms\r\n* OAuth2 Resource Owner Password Credentials\r\n* OAuth2 Client Credentials\r\n* OAuth2 Authorization Code\r\n* OAuth2 Implicit\r\n\r\nDelegate User Authentication to third party providers or maintain local credentials:\r\n* Local login by email or username plus password.\r\n* OAuth2 Client login delegation.\r\n\r\nMulti-faceted User Authorization options for each API resource endpoint:\r\n* Restrict client scope by configuration\r\n* Restrict client scope by interactive user opt-in\r\n* Restrict access by client scope\r\n* Restrict access by user role\r\n* Restrict access by user group memberships\r\n\r\nBuilt bottom to top using modern technologies your developers already know:\r\n* MongoDB with Mongoose.js persistence models\r\n* Node.js with Express.js server with familiar rails inspired MVC structure\r\n* Passport.js and OAuth2orize user and client authentication frameworks\r\n* Angular.js presentation layer with Yeoman generator-angular and generator-angular-fullstack\r\n* Bootstrap with Bootswatch styling built with LESS\r\n* Mocha server and Jasmine web client BDD style unit and integration tests\r\n* Grunt.js build automation and Heroku compliant deployment\r\n\r\nReady to integrate into your project:\r\n* MIT License\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}